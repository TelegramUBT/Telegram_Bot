import telebot
from telebot import types
from telebot.types import InputFile
import os
import pickle
from io import BytesIO

from google_auth_oauthlib.flow import InstalledAppFlow
from googleapiclient.discovery import build
from googleapiclient.http import MediaIoBaseDownload
from google.auth.transport.requests import Request

# Telegram token
TOKEN = '8035098335:AAFkCoMLWG24oiw-HBJHcEYRquzrIz6sGYw'
bot = telebot.TeleBot(TOKEN)

# Google Drive API –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
SCOPES = ['https://www.googleapis.com/auth/drive.readonly']
creds = None
token_path = 'token.pickle'

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–∫–µ–Ω–∞
if os.path.exists(token_path):
    with open(token_path, 'rb') as token:
        creds = pickle.load(token)

if not creds or not creds.valid:
    if creds and creds.expired and creds.refresh_token:
        creds.refresh(Request())
    else:
        flow = InstalledAppFlow.from_client_secrets_file(
            'client_secret_750088686374-cse9ni1h2f2315cmfop6o5184vn4a7oh.apps.googleusercontent.com.json',
            SCOPES)
        creds = flow.run_local_server(port=0)
    with open(token_path, 'wb') as token:
        pickle.dump(creds, token)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Google Drive API
drive_service = build('drive', 'v3', credentials=creds)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
def download_file_from_drive(file_id):
    request = drive_service.files().get_media(fileId=file_id)
    file_io = BytesIO()
    downloader = MediaIoBaseDownload(file_io, request)
    done = False
    while not done:
        status, done = downloader.next_chunk()
    file_io.seek(0)
    return file_io

# –°–ª–æ–≤–∞—Ä—å —Ç–µ–º -> file_id
chapter_files = {
    "1.1 –ö–∏–Ω–µ–º–∞—Ç–∏–∫–∞": "13kE1V8CUKIrOI-VKhHydqbI3kNauWSgY",
    "1.2 –î–∏–Ω–∞–º–∏–∫–∞": "15WpcxZ1rJNkoTL0hKa2jZMNLLquB2s6C",
    "1.3 “ö—ã—Å—ã–º": "10znvKLHr5SdpeTce19N3V3RyogUTnzz-",
    "1.4 –°—Ç–∞—Ç–∏–∫–∞": "12qb8jSd-U0wwhQqc7fUAfZK0zIrzCnt_",
    "1.5 –°–∞“õ—Ç–∞–ª—É –∑–∞“£–¥–∞—Ä—ã": "1VRgyAYZOnRGazqdfkpjtTvY4YTmeeMCF",
    "2.1 –ú–ö–¢": "13673B3xUfX1iy2n3wnvLLVcXuQyVOuqo",
    "2.2 –¢–µ—Ä–º–æ–¥–∏–Ω–∞–º–∏–∫–∞": "1XX_9AgRTvpCKfzKcRNF-xQjGirHwSqyU",
    "3.1 –≠–ª–µ–∫—Ç—Ä–æ—Å—Ç–∞—Ç–∏–∫–∞": "15CAblbjuHUkV8cLaMJYfJbwlsIL4CIcq",
    "3.2 –¢“±—Ä–∞“õ—Ç—ã —Ç–æ–∫": "1uuXVIZ7tcc0p0iY7dKnZW0xrgQRhIlQl",
    "3.3 ”ò—Ä—Ç“Ø—Ä–ª—ñ –æ—Ä—Ç–∞–¥–∞“ì—ã —ç–ª–µ–∫—Ç—Ä —Ç–æ“ì—ã": "19e9kbKeMyLc6h79H8KlTiKyiU2hBuQvU",
    "3.4 –ú–∞–≥–Ω–µ—Ç–∏–∑–º": "1ca4Cl32nPoDJK3xu_pIPYQE614MbDUri",
    "4.1 –ú–µ—Ö–∞–Ω–∏–∫–∞–ª—ã“õ —Ç–µ—Ä–±–µ–ª—ñ—Å—Ç–µ—Ä": "1bZeAUBxJu2Rih1uhBPz2O6HbAj_wkap_",
    "4.2 –ê–π–Ω—ã–º–∞–ª—ã —Ç–æ–∫": "1SVgcpLEkB9uY3C24zD1K3Q9_BHtXJ8qk",
    "4.3 –¢–æ–ª“õ—ã–Ω–¥–∞—Ä": "1mmlQC21KLvUS_rh-DN90YppVM8IM4yTQ",
    "5.1 –û–ø—Ç–∏–∫–∞. –ñ–∞—Ä—ã“õ": "1iloo_YIdIbkyAteCh8lj-qWOUJhpEaYu",
    "6.1 –°–∞–ª—ã—Å—Ç—ã—Ä–º–∞–ª—ã –¢–µ–æ—Ä–∏—è": "1QaOAr7lzsv3R9lNjYS43mshOMAO4l_tV",
    "6.2 –ö–≤–∞–Ω—Ç —Ñ–∏–∑–∏–∫–∞—Å—ã": "11nBKeNyjLHHnDarBU7P7Afx_s69IK4Nz",
    "–¢–µ—Å—Ç": "1jNq0BVhIY4sCk7sU9Cg-ZYdhY6CgVnXY"
}

# –†–∞–∑–¥–µ–ª—ã
subsections = {
    "section_1": ["1.1 –ö–∏–Ω–µ–º–∞—Ç–∏–∫–∞", "1.2 –î–∏–Ω–∞–º–∏–∫–∞", "1.3 “ö—ã—Å—ã–º", "1.4 –°—Ç–∞—Ç–∏–∫–∞", "1.5 –°–∞“õ—Ç–∞–ª—É –∑–∞“£–¥–∞—Ä—ã"],
    "section_2": ["2.1 –ú–ö–¢", "2.2 –¢–µ—Ä–º–æ–¥–∏–Ω–∞–º–∏–∫–∞"],
    "section_3": ["3.1 –≠–ª–µ–∫—Ç—Ä–æ—Å—Ç–∞—Ç–∏–∫–∞", "3.2 –¢“±—Ä–∞“õ—Ç—ã —Ç–æ–∫", "3.3 ”ò—Ä—Ç“Ø—Ä–ª—ñ –æ—Ä—Ç–∞–¥–∞“ì—ã —ç–ª–µ–∫—Ç—Ä —Ç–æ“ì—ã", "3.4 –ú–∞–≥–Ω–µ—Ç–∏–∑–º"],
    "section_4": ["4.1 –ú–µ—Ö–∞–Ω–∏–∫–∞–ª—ã“õ —Ç–µ—Ä–±–µ–ª—ñ—Å—Ç–µ—Ä", "4.2 –ê–π–Ω—ã–º–∞–ª—ã —Ç–æ–∫", "4.3 –¢–æ–ª“õ—ã–Ω–¥–∞—Ä"],
    "section_5": ["5.1 –û–ø—Ç–∏–∫–∞. –ñ–∞—Ä—ã“õ"],
    "section_6": ["6.1 –°–∞–ª—ã—Å—Ç—ã—Ä–º–∞–ª—ã –¢–µ–æ—Ä–∏—è", "6.2 –ö–≤–∞–Ω—Ç —Ñ–∏–∑–∏–∫–∞—Å—ã"],
    "section_7": ["–¢–µ—Å—Ç"]
}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def send_main_menu(chat_id):
    markup = types.InlineKeyboardMarkup(row_width=1)
    markup.add(
        types.InlineKeyboardButton("1 –±”©–ª—ñ–º: –ú–µ—Ö–∞–Ω–∏–∫–∞", callback_data="section_1"),
        types.InlineKeyboardButton("2 –±”©–ª—ñ–º: –ñ—ã–ª—É —Ñ–∏–∑–∏–∫–∞—Å—ã", callback_data="section_2"),
        types.InlineKeyboardButton("3 –±”©–ª—ñ–º: –≠–ª–µ–∫—Ç—Ä –∂”ô–Ω–µ –º–∞–≥–Ω–µ—Ç–∏–∑–º", callback_data="section_3"),
        types.InlineKeyboardButton("4 –±”©–ª—ñ–º: –¢–µ—Ä–±–µ–ª—ñ—Å—Ç–µ—Ä. –¢–æ–ª“õ—ã–Ω–¥–∞—Ä", callback_data="section_4"),
        types.InlineKeyboardButton("5 –±”©–ª—ñ–º: –û–ø—Ç–∏–∫–∞", callback_data="section_5"),
        types.InlineKeyboardButton("6 –±”©–ª—ñ–º: –ö–≤–∞–Ω—Ç –∂”ô–Ω–µ –∞—Ç–æ–º —Ñ–∏–∑–∏–∫–∞—Å—ã", callback_data="section_6"),
        types.InlineKeyboardButton("7 –±”©–ª—ñ–º: –¢–µ—Å—Ç —Å“±—Ä–∞“õ—Ç–∞—Ä—ã", callback_data="section_7")
    )
    bot.send_message(chat_id,
                     "üìò–°”ô–ª–µ–º –∂–∞—Å —Ç“Ø–ª–µ–∫! –§–∏–∑–∏–∫–∞ –ø”ô–Ω—ñ –±–æ–π—ã–Ω—à–∞ ”©–∑ –±–µ—Ç—ñ–º–µ–Ω –¥–∞–π—ã–Ω–¥–∞–ª—É“ì–∞ –∞—Ä–Ω–∞–ª“ì–∞–Ω —ç–ª–µ–∫—Ç—Ä–æ–Ω–¥—ã“õ, ”ô–¥—ñ—Å—Ç–µ–º–µ–ª—ñ–∫ “õ“±—Ä–∞–ª“ì–∞ “õ–æ—à –∫–µ–ª–¥—ñ“£! –§–∏–∑–∏–∫–∞ –±”©–ª—ñ–º—ñ–Ω —Ç–∞“£–¥–∞“£—ã–∑:",
                     reply_markup=markup)

# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def start(message):
    send_main_menu(message.chat.id)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π
@bot.callback_query_handler(func=lambda call: True)
def handle_callback(call):
    data = call.data

    if data.startswith("section_"):
        topics = subsections.get(data, [])
        markup = types.InlineKeyboardMarkup(row_width=1)
        for topic in topics:
            markup.add(types.InlineKeyboardButton(topic, callback_data=f"sub_{topic}"))
        markup.add(types.InlineKeyboardButton("üîô –ê—Ä—Ç“õ–∞", callback_data="back_to_main"))
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text="üìÇ –¢–∞“õ—ã—Ä—ã–ø—Ç—ã —Ç–∞“£–¥–∞“£—ã–∑:", reply_markup=markup)

    elif data.startswith("sub_"):
        topic = data[4:]
        file_id = chapter_files.get(topic)

        if file_id:
            file_io = download_file_from_drive(file_id)
            input_file = InputFile(file_io, file_name=f"{topic}.pdf")


            bot.send_document(call.message.chat.id, input_file, caption=f"üìÑ <b>{topic}</b> –º–∞—Ç–µ—Ä–∏–∞–ª—ã:", parse_mode="HTML")

            markup = types.InlineKeyboardMarkup(row_width=1)
            markup.add(types.InlineKeyboardButton("üì≤ WhatsApp-“õ–∞ ”©—Ç—ñ“£—ñ–∑!",
                                                  url="https://wa.me/+77085846268"))
            bot.send_message(call.message.chat.id, "“ö–æ—Å—ã–º—à–∞ –∞“õ–ø–∞—Ä–∞—Ç “Ø—à—ñ–Ω:", reply_markup=markup)

    elif data == "back_to_main":
        send_main_menu(call.message.chat.id)

bot.polling()
